# Generated by Django 3.1.8 on 2021-07-12 20:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('day_of_birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('user_role', models.CharField(choices=[('user', 'Обычный пользователь'), ('support', 'Техподдержка'), ('premium', 'Пользователь с подпиской')], default='user', max_length=20, verbose_name='Роль пользователя')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('date_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('invite_counter', models.PositiveSmallIntegerField(default=0)),
                ('is_agree_license', models.BooleanField(default=False)),
                ('last_active_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время последней активности')),
                ('sex', models.CharField(choices=[('user', 'Обычный пользователь'), ('support', 'Техподдержка'), ('premium', 'Пользователь с подпиской')], default='without', max_length=20, verbose_name='Пол пользователя')),
                ('auth_key', models.TextField(blank=True, verbose_name='Ключ авторизации')),
                ('is_auth_key', models.BooleanField(default=False, verbose_name='Может ли пользователь использовать ключ авторизации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(default='profiles/photos/no-image-user.jpg', null=True, upload_to='profiles/photos', verbose_name='Изображение')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True, verbose_name='Баланс')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
