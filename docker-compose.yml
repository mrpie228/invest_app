version: '3.5'

services:
  web:
    build: ./app
    container_name: my_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
    networks:
      invnetwork:
        ipv4_address: "172.44.0.4"

  db:
    image: postgres:12.0-alpine
    container_name: database_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    ports:
      - "5432:5432"
    networks:
      invnetwork:
        ipv4_address: "172.44.0.2"

  celery:
    build: ./app
    command: celery -A cel_task worker -B
    restart: always
    container_name: celery
    env_file:
      - ./.env.dev
    depends_on:
      - web
      - redis
    links:
      - redis
    volumes:
      - ./app/:/usr/src/app/
    networks:
      invnetwork:
        ipv4_address: "172.44.0.3"

  redis:
    image: redis:latest
    command: [ "redis-server", "--appendonly", "yes" ]
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    networks:
      invnetwork:
        ipv4_address: "172.44.0.5"
    volumes:
      - redis-data:/data

networks:
  invnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: "172.44.0.0/16"
volumes:
  postgres_data:
  redis-data:
  disk-buffer: